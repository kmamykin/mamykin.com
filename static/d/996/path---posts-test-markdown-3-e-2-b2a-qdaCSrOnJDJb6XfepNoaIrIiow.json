{"data":{"site":{"siteMetadata":{"site":"https://mamykin.com","disqusShortname":"mamykin-com"}},"post":{"frontmatter":{"permalink":"/posts/test-markdown/","title":"Test blog post","author":"Kliment Mamykin","date":"2018-07-21","image":"test-markdown/sharegrid-474930-unsplash.jpg","tags":["markdown"]},"content":{"type":"Markdown","markdown":"\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n## Heading 2\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n### Heading 3\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n#### Heading 4\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n## Heading 2\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n* List 1\n* List 1\n    * List 2\n    * List 2\n        * List 3\n        * List 3\n* List 1\n    1. List 2\n    2. List 2\n\n1. One\n2. Two \n3. Three\n\n## Math test\n\nSome formula inline $E(a*X + b) = a*E(X) + b$\n\n$$\n\\begin{equation}\n    X = \\sum_{i=1}^{N} x_i\n\\end{equation}\n$$\n\nAlpha: $\\alpha A$, Beta: $\\beta B$, Gamma: $\\gamma \\Gamma$  and some other symbols $\\int \\oint \\sum \\prod$ and in some sentences $n$ instances may be distributed into \n$m$ bins according to a total nonsense $x_i \\sim N(\\mu, \\sigma^2)$.\n\nIn physics, the mass-energy equivalence is stated by the equation $E=mc^2$, discovered in 1905 by Albert Einstein.\n\nThis display math is not using `\\begin{equation}` and just wraps display math in `$$...$$`\n$$ \nE=mc^2\n\\tag{1}\n\\label{eq:einstein}\n$$\n\nThis math uses `\\begin{aligned}` (environment defined in KeTex)\n$$ \n\\begin{aligned}\n    E=mc^2\n    \\tag{1a}\n\\end{aligned}\n$$\n\nThis math uses `\\begin{align}` (environment defined in LaTex but not in KeTex)\n$$ \n\\begin{align}\n    E=mc^2\n    \\tag{1b}\n\\end{align}\n$$\n\nThis math uses `\\begin{equation}` (not defined in KeTex)\n$$ \n\\begin{equation}\n    E=mc^2\n    \\tag{1c}\n\\end{equation}\n$$\n\nReferences to equation by label look like this `$\\eqref{eq:einstein}$`: $\\eqref{eq:einstein}$ and `$\\ref{eq:einstein}$` $\\ref{eq:einstein}$. \nAutomatic numbering of equations is not available, the only option is to manually tag with `\\tag{1}` command. \n\nRegular ([link to Einstein equation](#eq:einstein)) has to use `#eq:einstein` href. Regular link to tagged equations\n[link to equation by tag](#1a)\n\nThis equation somehow give trouble parsing...\n\n$$\n\\begin{equation}\n    \\int_0^\\infty \\frac{x^3}{e^x-1}\\,dx = \\frac{\\pi^4}{15} \n    \\tag{2}\n\\end{equation}\n$$\n\n## Image test\n\n![large image 1](test-markdown/ramiro-martinez-1317998-unsplash.jpg \"Logo Title Text 1\")\n\n![large image 2](test-markdown/tom-grimbert-tomgrimbert-1349885-unsplash.jpg \"Logo Title Text 2\")\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\n\n## Inline code snippets\n\nLorem ipsum `bash ls --all` dolor sit amet, consectetur adipiscing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \nUt enim ad minim veniam, quis nostrud `<div>Some html</div>` ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n## Coding test\n\n```python\n# Import the modules\nimport sys\nimport random\n\nans = True\n\nwhile ans:\n    question = raw_input(\"Ask the magic 8 ball a question: (press enter to quit) \")\n    \n    answers = random.randint(1,8)\n    \n    if question == \"\":\n        sys.exit()\n    \n    elif answers == 1:\n        print \"It is certain\"\n    \n    elif answers == 2:\n        print \"Outlook good\"\n    \n    elif answers == 3:\n        print \"You may rely on it\"\n    \n    elif answers == 4:\n        print \"Ask again later\"\n    \n    elif answers == 5:\n        print \"Concentrate and ask again\"\n    \n    elif answers == 6:\n        print \"Reply hazy, try again\"\n    \n    elif answers == 7:\n        print \"My reply is no\"\n    \n    elif answers == 8:\n        print \"My sources say no\"\n```\n\n## Javascript code test\n\n```javascript\nvar now = new Date();\n\nvar days = new Array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday');\n\nvar months = new Array('January','February','March','April','May','June','July','August','September','October','November','December');\n\nvar date = ((now.getDate()<10) ? \"0\" : \"\")+ now.getDate();\n\nfunction fourdigits(number)\t{\n\treturn (number < 1000) ? number + 1900 : number;\n\t\t\t\t\t\t\t\t}\ntoday =  days[now.getDay()] + \", \" +\n         months[now.getMonth()] + \" \" +\n         date + \", \" +\n         (fourdigits(now.getYear())) ;\n\ndocument.write(today);\n```\n\n## JSX code snippets\n\n```jsx\nfunction Clock(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {props.date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById('root')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n\n# Live demo\n\nChanges are automatically rendered as you type.\n\n* Implements [GitHub Flavored Markdown](https://github.github.com/gfm/)\n* Renders actual, \"native\" React DOM elements\n* Allows you to escape or skip HTML (try toggling the checkboxes above)\n* If you escape or skip the HTML, no `dangerouslySetInnerHTML` is used! Yay!\n\n## HTML block below\n\n<blockquote>\n  This blockquote will change based on the HTML settings above.\n</blockquote>\n\n## How about some code?\n```js\nvar React = require('react');\nvar Markdown = require('react-markdown');\n\nReact.render(\n  <Markdown source=\"# Your markdown here\" />,\n  document.getElementById('content')\n);\n```\n\nPretty neat, eh?\n\n---------------\n\n## Tables?\n\n| Feature   | Support |\n| --------- | ------- |\n| tables    | ✔ |\n| alignment | ✔ |\n| wewt      | ✔ |\n\n## More info?\n\nRead usage information and more on [GitHub](//github.com/rexxars/react-markdown)\n\n","notebook":null}}},"pageContext":{"permalink":"/posts/test-markdown/"}}